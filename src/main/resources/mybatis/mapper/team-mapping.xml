<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.musamanru.goldenglove.team.TeamDAO">
	
	<!-- 팀원 등록 요청 -->
	<insert id="makeRegister" parameterType="HashMap">
		insert into teamregister(teamId, teamName, requester, seq) values(#{teamId}, #{teamName}, #{requester}, #{seq});
	</insert>
	
	<update id="registerUser" parameterType="HashMap">
		update teamregister set id = #{id} where teamId = #{teamId} and seq = #{seq} and result = 'null' and requester = 'team';
	</update>
	
	<!-- 요청 조회 -->
	<select id="selectRegisterUser" parameterType="String" resultType="String">
		select id from teamregister where teamId = #{teamId} and requester = 'team' and result = 'null';
	</select>
	
	<select id="selectRegisterTeam" parameterType="String" resultType="String">
		select teamName from teamregister where id = #{id} and requester = 'team' and result = 'null';
	</select>
	
	<!-- 팀 생성 -->
	<insert id="insertTeam" parameterType="teamDTO">
		insert into team(teamId, teamName) values(#{teamId}, #{teamName});
	</insert>
	
	<update id="updateSelf" parameterType="UserDTO">
		update team set ${position} = #{id} where teamId = #{id};
	</update>
	
	<update id="updateUserTeam" parameterType="teamDTO">
		update user set teamName = #{teamName} where id = #{teamId};
	</update>
	
	<!-- 팀원 조회 -->
	<select id="selectTeam" resultType="teamDTO" parameterType="String">
		select * from team where teamName = #{teamName};
	</select>
	
	<!-- 수정 -->
	<update id="updateTeam" parameterType="teamDTO">
		update team set teamName = #{teamName}, firstBase = #{firstBase}, secondBase = #{secondBase}, thirdBase = #{thirdBase}, catcher = #{catcher}, pitcher = #{pitcher}, leftFielder = #{leftFielder}, rightFielder = #{rightFielder}, centerFielder = #{centerFielder}, shortStop = #{shortStop} where teamId = #{teamId};
	</update>
	
	<!-- 팀이름 중복조회 -->
	<select id="selectTeamName" resultType="Integer" parameterType="String">
		select count(*) from team where teamName = #{teamName};
	</select>
	
	<!-- 팀원 추가 가입조회 -->
	<select id="selectUser" resultType="userDTO" parameterType="String">
		select * from user where id = #{id};
	</select>
	
	<select id="selectUserPhone" resultType="userDTO" parameterType="String">
		select * from user where phone = #{phone};
	</select>
	
	<!-- 팀아이디 조회 -->
	<select id="selectTeamId" resultType="String" parameterType="String">
		select teamId from team where teamName = #{teamId};
	</select>
	
	<!-- 팀탈퇴 -->
	<update id="exitTeamUser" parameterType="String">
		update user set teamName = null where id = #{id};
	</update>
	
	<update id="exitTeam" parameterType="HashMap">
		update team set ${position} = #{modiPosition} where teamName = #{teamName};
	</update>
	
	<!-- 포지션별 선수조회 -->
	<select id="selectPosition" resultType="String" parameterType="userDTO">
		select ${position} from team where teamName = #{teamName};
	</select>
	
	<!-- 팀 가입 신청 -->
	<insert id="makeRegi" parameterType="HashMap">
		insert into teamregister(id, seq) values(#{id}, #{seq});
	</insert>
	
	<update id="registerTeam" parameterType="HashMap">
		update teamregister set teamId = #{teamId}, teamName = #{teamName} where id = #{id} and seq = #{seq};
	</update>
	
	<!-- 팀 가입 신청 조회 -->
	<select id="selectRegisterInfo" parameterType="String" resultType="String">
		select teamName from teamregister where id = #{id} and result = 'null' and requester = 'user';
	</select>
	
	<select id="selectRegisterInfoUser" parameterType="String" resultType="String">
		select id from teamregister where teamId = #{teamId} and requester = 'user' and result = 'null';
	</select>
	
	<!-- 팀 가입 승인 -->
	<update id="updateRegisterResult" parameterType="HashMap">
		update teamregister set result = #{result} where id = #{id} and teamName = #{teamName} and result = 'null';
	</update>
	
	<update id="updatePosition" parameterType="HashMap">
		update team set ${position} = concat(${position}, ' ', #{id}) where teamName = #{teamName};
	</update>
	
	<!-- seq 조회 -->
	<select id="selectSeq" resultType="String" parameterType="HashMap">
		select seq from teamregister where id = #{id} and teamName = #{teamName} and result = 'null';
	</select>
	
	<!-- 팀원 명 전체 조회 -->
	<select id="selectAllMember" parameterType="String" resultType="String">
		select concat_ws(' ', firstBase, secondBase, thirdBase, catcher, pitcher, leftFielder, rightFielder, centerFielder, shortStop) from team where teamId = #{teamId};
	</select>
	
	
	<!-- 가입 신청 알림 -->
	<insert id="applyJoinAlarm" parameterType="String">
		insert into alarm(alarmDate, applyJoin, teamLeader, teamMember) 
		values (#{alarmDate}, 1, 
				(select name from user where id = (select teamId from team where teamName = #{teamName})), 
				(select name from user where id = #{id}));
	</insert>

	<!-- 가입 수락 알림 -->
	<insert id="acceptJoinAlarm" parameterType="String">
		insert into alarm(alarmDate, acceptJoin, teamLeader, teamMember) 
		values (#{alarmDate}, 1, 
				(select name from user where id = (select teamId from team where teamName = #{teamName})), 
				(select name from user where id = #{id}));
	</insert>

	<!-- 가입 거절 알림 -->
	<insert id="cancleJoinAlarm" parameterType="String">
		insert into alarm(alarmDate, cancleJoin, teamLeader, teamMember) 
		values (#{alarmDate}, 1, 
				(select name from user where id = (select teamId from team where teamName = #{teamName})), 
				(select name from user where id = #{id}));
	</insert>

	<!-- 팀 탈퇴 알림 -->
	<insert id="exitTeamAlarm" parameterType="String">
		insert into alarm(alarmDate, exitTeam, teamLeader, teamMember)
		values (#{alarmDate}, 1, 
				(select name from user where id = (select teamId from team where teamName = #{teamName})), 
				(select name from user where id = #{id}));
	</insert>

	<!-- 팀 가입 요청 알림 -->
	<insert id="requestJoinAlarm" parameterType="HashMap">
		insert into alarm(alarmDate, teamLeader, teamMember, requestJoin)
		values (date_format(now(), '%Y.%m.%d'), 
				(select name from user where id = (select teamId from team where teamName = #{teamName})), 
				(select name from user where id = #{id}),
				1);
	</insert>
	
	<!-- 팀 가입 요청 승인 알림 -->
	<insert id="requestAcceptAlarm" parameterType="HashMap">
		insert into alarm(alarmDate, teamLeader, teamMember, acceptJoin, requestJoin)
		values (date_format(now(), '%Y.%m.%d'), 
				(select name from user where id = (select teamId from team where teamName = #{teamName})), 
				(select name from user where id = #{id}),
				1, 1);
	</insert>
	
	<!-- 팀 가입 요청 거절 알림 -->
	<insert id="requestCancleAlarm" parameterType="HashMap">
		insert into alarm(alarmDate, teamLeader, teamMember, cancleJoin, requestJoin)
		values (date_format(now(), '%Y.%m.%d'), 
				(select name from user where id = (select teamId from team where teamName = #{teamName})), 
				(select name from user where id = #{id}),
				1, 1);
	</insert>
	
	<!-- 팀 순위 리스트 -->
	<select id="selectRank" resultType="String">
		select teamName from team order by winningRate desc, winCount desc;
	</select>
	
	<!-- 팀장 변경 -->
	<update id="updateTeamLeader" parameterType="HashMap">
		update team set teamId = #{id} where teamName = #{teamName};
	</update>
	<select id="updateTeamLeaderSelect" parameterType="HashMap" resultType="int">
		select count(*) from user where teamName = #{teamName} and id = #{id}
	</select>
	
	<!-- 팀 삭제 -->
	<update id="deleteTeamUser" parameterType="String">
		update user set teamName = NULL where id = #{id};
	</update>
	<delete id="deleteTeam" parameterType="String">
		delete from team where teamId = #{id};
	</delete>
</mapper>